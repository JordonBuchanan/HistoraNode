var express         = require("express"),
     app            = express(),
     bodyParser     = require("body-parser"),
     nodemailer     = require("nodemailer"),
     methodOverride = require("method-override"),
     session        = require("express-session"),
     LocalStrategy  = require("passport-local"),
     cookieParser   = require("cookie-parser"),
     mongoose       = require("mongoose"),
     passport       = require("passport"),
     Comment        = require('./models/comment'),
     User           = require('./models/user');

app.use(bodyParser.urlencoded({extended: true}));
app.use(express.static(__dirname + '/Views/public'));
app.set('views', __dirname + '/Views');
app.use(express.static('files'));
app.use(methodOverride('_method'));
app.use(cookieParser('secret'));
app.set("view engine", "ejs");

// PASSPORT CONFIGURATION
app.use(require("express-session")({
    secret: "CharlesMartell",
    resave: false,
    saveUninitialized: false
}));

app.use(passport.initialize());
app.use(passport.session());
//passport.use(new LocalStrategy(User.authenticate()));
//passport.serializeUser(User.serializeUser());
//passport.deserializeUser(User.deserializeUser());

//SCHEMA SETUP
mongoose.connect('mongodb://localhost/histora');
mongoose.Promise = global.Promise;
var db = mongoose.connection;
var PostSchema = new mongoose.Schema({
    name: String,
    createdAt: { type: Date, default: Date.now },
    image: String,
    text: String,
    comments: [
        {
            type: mongoose.Schema.Types.ObjectId,
            ref: "Comment"
        }
    ]
});
var Post = mongoose.model("Post", PostSchema);

process.on('unhandledRejection', (reason, p) => {
    console.log('Unhandled Rejection at: Promise', p, 'reason:', reason);
    // application specific logging, throwing an error, or other logic here
  });

//==================
//GET ROUTES
//==================

app.get("/", function(req, res){
    res.render("Home.ejs");
});

app.get("/Forum/new", function(req, res){
    res.render("new.ejs")
});

app.get("/Forum", function(req, res){
    Post.find({}, function(err, allPost){
        if(err){
            console.log(err);
        } else {
            res.render("Forum", {Post:allPost});
        }
    });
});

app.get("/Forum/:id", function(req, res){
    Post.findById(req.params.id).populate("comments").exec(function(err, foundPost){
        if(err){
            console.log(err);
        } else{
            res.render("show", {Post: foundPost});
        }
    })
});

//===================
//POST ROUTES
//===================

app.post("/Forum", function(req, res){
    var name = req.body.name;
    var image = req.body.image;
    var text = req.body.text;
    var newPost = {name: name, image: image, text: text}
//get data from form and add to posts array
    Post.create(newPost, function(err, newlyCreated){
        if(err){
            console.log(err);
        } else{
            res.redirect("/Forum");
        }
    });
});

//===============
//COMMENT ROUTES
//==============

app.get("/Forum/:id/newcomment", function(req, res){
    Post.findById(req.params.id, function(err, Post){
        if(err){
            console.log(err);
        } else{
            res.render("newcomment", {Post: Post});
        }
    }); 
});

app.post("/Forum/:id/comments", function(req,res){
    Post.findById(req.params.id, function(err, Post){
        if(err){
            console.log(err);
            res.redirect("/Forum");
        }else {
            Comment.create(req.body.comment, function(err, comment){
                if(err){
                    console.log(err);
                } else{
                    Post.comments.push(comment);
                    Post.save();
                    res.redirect("/Forum/" + Post._id);
                }
            });
        }
    });
});

//================
//ALL ROUTE
//================

app.get("*", function(req, res){
    res.render("all.ejs")
});

//================
//LISTEN
//================

var server     =    app.listen(process.env.PORT || 3000,function(){
    console.log("We have started our server on port 3000");
});